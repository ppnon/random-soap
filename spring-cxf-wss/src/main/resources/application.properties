spring.application.name=demo-cxf-wss-spsecurity
server.port=8090

### Application parameters
server.servlet.context-parameters.appCode=123
server.servlet.context-parameters.countryId=1
server.servlet.context-parameters.entityId=00021

client.domain=http://localhost:8090

### Field Validations
field.login.username=[A-Za-z0-9_]{3,20}
field.login.password=[A-Fa-f0-9]{64}


### CXF Configurations
cxf.servlet.init.hide-service-list-page=false
#cxf.servlet.load-on-startup=1
cxf.path=/service

## CXF Endponints
endpoint.createUserAccountPort.publish=/demo
endpoint.createUserAccountPort.published.url=${client.domain}${cxf.path}${endpoint.createUserAccountPort.publish}


### Feign Configurations
feign.compression.request.enabled=true
feign.compression.response.enabled=true
feign.hystrix.enabled=true
# set the level of feign logs (none, headers, basic, full) 
#feign.client.config.default.loggerLevel=full

### Hystrix Configurations
hystrix.command.default.execution.timeout.enabled=true
# sets the minimum number of requests in a rolling window that will trip the circuit.
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
# sets the amount of time, after tripping the circuit, to reject requests before allowing attempts again to determine if the circuit should again be closed.
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
# sets the error percentage at or above which the circuit should trip open and start short-circuiting requests to fallback logic.
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50
# sets the time in milliseconds after which the caller will observe a timeout and walk away from the command execution. Hystrix marks the HystrixCommand as a TIMEOUT, and performs fallback logic.
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=20000

### securityS2SClient
feign.client.config.securityS2SClient.loggerLevel=full
client.securityS2SClient.url=http://localhost:8080/dummy/
client.securityS2SClient.login.path=/200

#hystrix.command.SecurityS2SClient#login(S2SCredentialRequest).execution.isolation.thread.timeoutInMilliseconds=2000

### acaccountsClient
client.acaccountsClient.url=http://localhost:8080/dummy/
client.acaccountsClient.post.createAccount.path=/a/200
client.acaccountsClient.post.associateProfile.path=/a/{id}/p

#hystrix.command.AcAccountClient#createAccount(AcRequest).execution.isolation.thread.timeoutInMilliseconds=20000
#hystrix.command.AcAccountClient#associateProfile(AcRequest).execution.isolation.thread.timeoutInMilliseconds=20000

### Logback Configurations
logging.pattern.console=%d{ISO8601} %-5level [%X{X-B3-TraceId:-traceID} - %X{X-B3-SpanId:-spanID}] [%X{ipAddress:-0.0.0.0}] [%thread] %logger{36} : %msg%n%rEx
logging.pattern.file=%d{ISO8601} %-5level [%X{X-B3-TraceId:-traceID} - %X{X-B3-SpanId:-spanID}] [%X{ipAddress:-ip}] [%thread] %logger{36} : %msg%n%rEx
logging.file=logs/${spring.application.name}
logging.file.max-history=3
logging.file.max-size=10MB

## custom logback properties 
logback.logging.file.clean.history=true
logback.logging.file.cap-size=200MB

logback.logging.root.mode=INFO
logback.logging.cxf.mode=ERROR
logback.logging.app.mode=INFO
